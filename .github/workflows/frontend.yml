name: Frontend CICD
run-name: Frontend deployment update triggered by ${{ github.actor }}.
on:
  push:
    branches:
      - deployment
    paths:
      - "frontend/**"
      - ".github/workflows/frontend.yml"

jobs:
  frontend-CI-CD:
    name: Frontend CI/CD
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: frontend

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 14

      - name: Cache Node Modules
        id: cache-npm
        uses: actions/cache@v3
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package.json') }}

      - name: Install dependencies
        run: npm install

      - name: Retrieve the env vars
        run: echo "${{ secrets.FE_ENV }}" > .env

      - name: Build application
        run: npm run build

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.PAT_TOKEN }}

      - name: Build the frontend image and push it to GHCR
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: ghcr.io/${{ github.repository_owner }}/monolythicbc-frontend:${{ github.sha }}
          context: frontend

      - name: Set permissions for private key
        run: |
          echo "${{ secrets.AWS_PRIVATE_KEY }}" > key.pem
          chmod 600 key.pem

      - name: Deploy to AWS instance
        run: |
          ssh -o StrictHostKeyChecking=no -i key.pem ${{ secrets.AWS_INSTANCE_USERNAME }}@${{ ssecrets.AWS_INSTANCE_IP }} '

            echo "${{ secrets.PAT_TOKEN }}" | docker login ghcr.io -u ${{ github.repository_owner }} --password-stdin
            
            docker pull ghcr.io/${{ github.repository_owner}}/monolythicbc-frontend:${{ github.sha }} &&

            docker stop monolythicbc-frontend || true &&
            
            docker rm monolythicbc-frontend || true &&
            
            docker run -d --name monolythicbc-frontend -p 80:80 ghcr.io/${{ github.repository_owner}}/monolythicbc-frontend:${{ github.sha }}
          '
